CMAKE_MINIMUM_REQUIRED(VERSION 3.7)
project(TraceFileSim)

#Compiler flags
set(GCC_COVERAGE_COMPILER_FLAGS "-Wall -g")
set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} ${GCC_COVERAGE_COMPILER_FLAGS}")

#Source Code Files. TODO Find a cleaner way to do this so that it is done automatically
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Allocators/Allocator.cpp)
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Allocators/Allocator.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Allocators/BasicAllocator.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Allocators/BasicAllocator.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Allocators/RegionBasedAllocator.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Allocators/RegionBasedAllocator.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Allocators/NextFitAllocator.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Allocators/NextFitAllocator.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Collectors/Collector.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Collectors/Collector.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Collectors/BalancedCollector.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Collectors/BalancedCollector.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Collectors/MarkSweepCollector.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Collectors/MarkSweepCollector.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Collectors/RecyclerCollector.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Collectors/RecyclerCollector.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Collectors/TraversalCollector.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Collectors/TraversalCollector.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Main/Array.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Main/Array.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Main/MemoryManager.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Main/MemoryManager.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Main/Object.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Main/Object.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Main/ObjectContainer.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Main/ObjectContainer.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Main/Region.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Main/Region.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Main/Simulator.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Main/Simulator.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Main/Optional.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Main/Optional.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/WriteBarriers/WriteBarrier.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/WriteBarriers/WriteBarrier.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/WriteBarriers/RecyclerWriteBarrier.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/WriteBarriers/RecyclerWriteBarrier.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/WriteBarriers/ReferenceCountingWriteBarrier.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/WriteBarriers/ReferenceCountingWriteBarrier.hpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/traceFileSim.cpp ${SOURCE_FILES})
set(SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/defines.hpp ${SOURCE_FILES})


#Create executable from source files
add_executable(TraceFileSim ${SOURCE_FILES})